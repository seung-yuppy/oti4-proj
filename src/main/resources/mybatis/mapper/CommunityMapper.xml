<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="edu.example.bughunters.dao.CommunityDAO">

	<!-- 하나만조회(상세보기) -->
	<select id="selectById" resultType="edu.example.bughunters.domain.CommunityDTO">
    SELECT
      c.community_id,
      c.title,
      c.content,
      c.image,
      c.category,
      c.user_id,
      c.created_at,
      c.viewcount,
      u.nickname
    FROM Community c
    LEFT JOIN "User" u ON u.user_id = c.user_id
    WHERE c.community_id = #{communityId}
  </select>

	<!-- 리스트 조회 (페이징) -->
	<select id="selectList" parameterType="map" resultType="edu.example.bughunters.domain.CommunityDTO">
    SELECT
      c.community_id,
      c.title,
      c.content,
      c.image,
      c.category,
      c.user_id,
      c.created_at,
      c.viewcount,
      u.nickname,
      NVL( (SELECT COUNT(*) FROM "Comment" x WHERE x.community_id = c.community_id), 0) AS commentCount
    FROM Community c
    JOIN "User" u ON u.user_id = c.user_id
    <where>
      <if test="category != null and category != ''">
        AND c.category = #{category}
      </if>
      <if test="q != null and q != ''">
        AND (
          LOWER(c.title) LIKE LOWER('%' || #{q} || '%')
          OR LOWER(u.nickname) LIKE LOWER('%' || #{q} || '%')
        )
      </if>
    </where>
    ORDER BY c.community_id DESC
    <if test="offset != null and limit != null">
      OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </if>
  </select>

	<select id="countList" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM Community c
    JOIN "User" u ON u.user_id = c.user_id
    <where>
      <if test="category != null and category != ''">
        AND c.category = #{category}
      </if>
      <if test="q != null and q != ''">
        AND (
          LOWER(c.title) LIKE LOWER('%' || #{q} || '%')
          OR LOWER(u.nickname) LIKE LOWER('%' || #{q} || '%')
        )
      </if>
    </where>
  </select>
  
	<!-- 조회수 증가 -->
	<update id="increaseViewcount">
		UPDATE Community
		SET viewcount = viewcount + 1
		WHERE
		community_id = #{communityId}
	</update>

	<!-- 등록 -->
	<insert id="insertCommunity" parameterType="edu.example.bughunters.domain.CommunityDTO">
    INSERT INTO Community (title, content, image, category, user_id)
    VALUES (#{title}, #{content}, #{image,jdbcType=BLOB}, #{category}, #{userId})
  </insert>


	<!-- 수정 -->
	<update id="updateCommunity" parameterType="edu.example.bughunters.domain.CommunityDTO">
    UPDATE Community
    <set>
      <if test="title    != null">title    = #{title},</if>
      <if test="content  != null">content  = #{content},</if>
      <if test="image != null">image = #{image,jdbcType=BLOB},</if>
      <if test="category != null">category = #{category},</if>
    </set>
    WHERE community_id = #{communityId}
      AND user_id      = #{userId}
  </update>

	<!-- 삭제 -->
	<delete id="deleteCommunity" parameterType="map">
		DELETE FROM Community
		WHERE community_id = #{communityId}
		AND user_id = #{userId}
	</delete>

	<update id="clearImage">
		UPDATE Community
		SET image = NULL
		WHERE community_id = #{communityId}
		AND user_id = #{userId}
	</update>
	
	<select id="countPostsByUser" parameterType="int" resultType="int">
    SELECT COUNT(*)
    FROM Community c
    WHERE c.user_id = #{userId}
  </select>

  <select id="selectPostsByUser" resultType="edu.example.bughunters.domain.CommunityDTO">
    SELECT
      c.community_id,
      c.title,
      c.content,
      c.created_at,
      c.viewcount,
      c.user_id,
      NVL( (SELECT COUNT(*) FROM "Comment" x WHERE x.community_id = c.community_id), 0) AS commentCount
    FROM Community c
    WHERE c.user_id = #{userId}
    ORDER BY c.created_at DESC
    OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
  </select>

</mapper>